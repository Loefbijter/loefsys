# Generated by Django 5.1.5 on 2025-03-10 09:58

import django.core.validators
import django_extensions.db.fields
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
                ('start', models.DateTimeField(verbose_name='Start time')),
                ('end', models.DateTimeField(verbose_name='End time')),
                ('category', models.PositiveSmallIntegerField(choices=[(0, 'Other'), (1, 'Alumni'), (2, 'Association'), (3, 'Competition'), (4, 'Leisure'), (5, 'Sailing')], verbose_name='Category')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price')),
                ('fine', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Fine if participant does not show up.', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fine')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('is_open_event', models.BooleanField(default=False, help_text='Event is open for non-members')),
                ('published', models.BooleanField(default=False, verbose_name='Published')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Active'), (1, 'In queue'), (2, 'Cancelled'), (3, 'Cancelled and fined')], verbose_name='Status')),
                ('price_at_registration', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Price')),
                ('fine_at_registration', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Fine')),
                ('costs', models.GeneratedField(db_persist=True, expression=models.Case(models.When(status=0, then=models.F('price_at_registration')), models.When(status=3, then=models.F('fine_at_registration')), default=Decimal('0.00')), output_field=models.DecimalField(decimal_places=2, max_digits=5))),
                ('costs_paid', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Costs paid')),
            ],
        ),
        migrations.CreateModel(
            name='MandatoryRegistrationDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('start', models.DateTimeField(help_text="Prefer times when people don't have lectures, e.g. 12:30 instead of 13:37.", verbose_name='Registration start')),
                ('end', models.DateTimeField(help_text="If you set a registration period registration will be required. If you don't set one, registration won't be required.", verbose_name='Registration end')),
                ('cancel_deadline', models.DateTimeField(blank=True, null=True, verbose_name='Cancel deadline')),
                ('send_cancel_email', models.BooleanField(default=True, help_text='Send an email to the organising party when a member cancels their registration after the deadline.', verbose_name='Send cancellation notifications')),
                ('capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Maximum number of participants')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
