# Generated by Django 4.1.7 on 2023-06-17 00:44

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MemberGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='Groupname')),
                ('description', models.TextField()),
                ('active', models.BooleanField(default=False, help_text='This should only be unchecked if the group has been dissolved.')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='contact email address')),
                ('display_members', models.BooleanField(default=False)),
                ('since', models.DateField(blank=True, null=True, verbose_name='founded in')),
                ('until', models.DateField(blank=True, null=True, verbose_name='existed until')),
            ],
            options={
                'verbose_name': 'member group',
                'verbose_name_plural': 'member groups',
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('membergroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='groups.membergroup')),
                ('year', models.IntegerField(default=56)),
            ],
            bases=('groups.membergroup',),
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('membergroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='groups.membergroup')),
                ('mandatory', models.BooleanField(default=False, help_text='If this is checked new members should be assigned to this committee, any members that are part of this committee satisfy their committee_duty.')),
            ],
            bases=('groups.membergroup',),
        ),
        migrations.CreateModel(
            name='Fraternity',
            fields=[
                ('membergroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='groups.membergroup')),
                ('gender_requirement', models.CharField(choices=[('MIXED', 'Mixed'), ('FEMALE', 'Female'), ('MALE', 'Male')], default='MIXED', max_length=6)),
            ],
            bases=('groups.membergroup',),
        ),
        migrations.CreateModel(
            name='YearClub',
            fields=[
                ('membergroup_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='groups.membergroup')),
                ('year', models.IntegerField(default=56)),
            ],
            bases=('groups.membergroup',),
        ),
        migrations.CreateModel(
            name='MemberGroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chair', models.BooleanField(default=False, verbose_name='Chair of the group')),
                ('role', models.CharField(blank=True, help_text='The role of this member', max_length=255, null=True, verbose_name='role')),
                ('since', models.DateField(default=datetime.date.today, help_text='The date this member joined in this role', verbose_name='Member since')),
                ('until', models.DateField(blank=True, help_text="A member until this time (can't be in the future).", null=True, verbose_name='Member until')),
                ('note', models.CharField(blank=True, max_length=256)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.membergroup', verbose_name='Group')),
            ],
        ),
    ]
